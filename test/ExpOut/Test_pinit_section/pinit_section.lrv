IMPORTS {
import main.CMachine;
import ppArtifacts.*;
}

GLOBAL {

VARIABLES {

 Channel cact1 = new Channel("cact1");

}

EVENTS {
init1(CMachine obj1) = {CMachine.new()uponReturning(obj1)}
}

PROPERTY prop1 
{

STATES 
{
STARTING { start  }
}

TRANSITIONS 
{ 
start -> start [init1 \  \ cact1.send(new Tmp_temp_brew(obj1) ) ;]
}

}

FOREACH (CMachine cm) {

EVENTS {
rcact1(Tmp_temp_brew obj) = {cact1.receive(obj)} where { cm = obj.cm;  }
brew_entry() = {CMachine cm.brew()}
brew_exit() = {CMachine cm.brew()uponReturning()}
cleanF_entry() = {CMachine cm.cleanF()}
cleanF_exit() = {CMachine cm.cleanF()uponReturning()}
}

PROPERTY prop1_cact1 
{

STATES 
{
BAD { bad  }
NORMAL { q2  q  }
STARTING { start  }
}

TRANSITIONS 
{ 
start -> q [rcact1 \  \ ]
q -> q2 [brew_entry \ cm.cups < cm.limit \ ]
q2 -> q [brew_exit \  \ ]
q2 -> bad [brew_entry \  \ ]
q2 -> bad [cleanF_entry \  \ ]
}

}

}

}

