module Skelppdate where

-- Haskell module generated by the BNF converter

import Absppdate
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transId :: Id -> Result
transId x = case x of
  Id str  -> failure x


transSymbols :: Symbols -> Result
transSymbols x = case x of
  Symbols str  -> failure x


transAbsPPDATE :: AbsPPDATE -> Result
transAbsPPDATE x = case x of
  AbsPPDATE imports global cinvariants contracts methods  -> failure x


transImports :: Imports -> Result
transImports x = case x of
  Imports imports  -> failure x


transImport :: Import -> Result
transImport x = case x of
  Import javafiless  -> failure x


transJavaFiles :: JavaFiles -> Result
transJavaFiles x = case x of
  JavaFiles id  -> failure x


transGlobal :: Global -> Result
transGlobal x = case x of
  Global context  -> failure x


transContext :: Context -> Result
transContext x = case x of
  Ctxt variables events properties foreaches  -> failure x


transVariables :: Variables -> Result
transVariables x = case x of
  VarNil  -> failure x
  VarDef variables  -> failure x


transVariable :: Variable -> Result
transVariable x = case x of
  Var varmodifier type' vardecls  -> failure x


transVarModifier :: VarModifier -> Result
transVarModifier x = case x of
  VarModifierFinal  -> failure x
  VarModifierNil  -> failure x


transEvents :: Events -> Result
transEvents x = case x of
  EventsNil  -> failure x
  EventsDef events  -> failure x


transEvent :: Event -> Result
transEvent x = case x of
  Event id binds compoundevent whereclause  -> failure x


transCompoundEvent :: CompoundEvent -> Result
transCompoundEvent x = case x of
  Collection eventlist  -> failure x
  NormalEvent binding id varss eventvariation  -> failure x
  ClockEvent id n  -> failure x
  OnlyId id  -> failure x
  OnlyIdPar id  -> failure x


transEventList :: EventList -> Result
transEventList x = case x of
  CECollection compoundevents  -> failure x


transEventVariation :: EventVariation -> Result
transEventVariation x = case x of
  EVEntry  -> failure x
  EVExit varss  -> failure x
  EVThrow varss  -> failure x
  EVHadle varss  -> failure x


transBinding :: Binding -> Result
transBinding x = case x of
  BindingVar bind  -> failure x


transBind :: Bind -> Result
transBind x = case x of
  BindStar  -> failure x
  BindType type' id  -> failure x
  BindId id  -> failure x


transWhereClause :: WhereClause -> Result
transWhereClause x = case x of
  WhereClauseNil  -> failure x
  WhereClauseDef whereexps  -> failure x


transWhereExp :: WhereExp -> Result
transWhereExp x = case x of
  WhereExp bind varexp  -> failure x


transVars :: Vars -> Result
transVars x = case x of
  Vars bind  -> failure x


transProperties :: Properties -> Result
transProperties x = case x of
  PropertiesNil  -> failure x
  ProperiesDef id states transitions properties  -> failure x


transStates :: States -> Result
transStates x = case x of
  States accepting bad normal starting  -> failure x


transAccepting :: Accepting -> Result
transAccepting x = case x of
  AcceptingNil  -> failure x
  AcceptingDef states  -> failure x


transBad :: Bad -> Result
transBad x = case x of
  BadNil  -> failure x
  BadDef states  -> failure x


transNormal :: Normal -> Result
transNormal x = case x of
  NormalNil  -> failure x
  NormalDef states  -> failure x


transStarting :: Starting -> Result
transStarting x = case x of
  StartingDef states  -> failure x


transState :: State -> Result
transState x = case x of
  State namestate initialcode contractnames  -> failure x


transNameState :: NameState -> Result
transNameState x = case x of
  NameState id  -> failure x


transContractNames :: ContractNames -> Result
transContractNames x = case x of
  CNS contractnames  -> failure x
  CNSNil  -> failure x


transContractName :: ContractName -> Result
transContractName x = case x of
  CN id  -> failure x


transInitialCode :: InitialCode -> Result
transInitialCode x = case x of
  InitNil  -> failure x
  InitProg java  -> failure x


transTransitions :: Transitions -> Result
transTransitions x = case x of
  Transitions transitions  -> failure x


transTransition :: Transition -> Result
transTransition x = case x of
  Transition namestate1 namestate2 arrow3  -> failure x


transArrow :: Arrow -> Result
transArrow x = case x of
  Arrow id condition  -> failure x


transCondition :: Condition -> Result
transCondition x = case x of
  Cond1  -> failure x
  Cond2 cond  -> failure x


transCond :: Cond -> Result
transCond x = case x of
  CondExpDef condexp  -> failure x
  CondAction condexp action  -> failure x


transAction :: Action -> Result
transAction x = case x of
  Action java  -> failure x


transForeaches :: Foreaches -> Result
transForeaches x = case x of
  ForeachesNil  -> failure x
  ForeachesDef argss context  -> failure x


transCInvariants :: CInvariants -> Result
transCInvariants x = case x of
  CInvariants cinvariants  -> failure x
  CInvempty  -> failure x


transCInvariant :: CInvariant -> Result
transCInvariant x = case x of
  CI id jml  -> failure x


transContracts :: Contracts -> Result
transContracts x = case x of
  Contracts contracts  -> failure x
  Constempty  -> failure x


transContract :: Contract -> Result
transContract x = case x of
  Contract id pre method post assignable  -> failure x


transPre :: Pre -> Result
transPre x = case x of
  Pre jml  -> failure x


transMethod :: Method -> Result
transMethod x = case x of
  Method id1 id2  -> failure x


transPost :: Post -> Result
transPost x = case x of
  Post jml  -> failure x


transAssignable :: Assignable -> Result
transAssignable x = case x of
  Assignable assigs  -> failure x


transAssig :: Assig -> Result
transAssig x = case x of
  AssigJML jml  -> failure x
  AssigE  -> failure x
  AssigN  -> failure x


transMethods :: Methods -> Result
transMethods x = case x of
  Methods bodymethods  -> failure x
  MethodsNil  -> failure x


transBodyMethods :: BodyMethods -> Result
transBodyMethods x = case x of
  BodyMemDecl memberdecls  -> failure x
  BodyImport importfile  -> failure x


transMemberDecl :: MemberDecl -> Result
transMemberDecl x = case x of
  MemberDeclMethod type' id argss java  -> failure x
  MemberDeclField variabledecl  -> failure x


transVariableDecl :: VariableDecl -> Result
transVariableDecl x = case x of
  VariableDecl type' vardecls  -> failure x


transVarDecl :: VarDecl -> Result
transVarDecl x = case x of
  VarDecl id variableinitializer  -> failure x


transVariableInitializer :: VariableInitializer -> Result
transVariableInitializer x = case x of
  VarInit varexp  -> failure x
  VarInitNil  -> failure x


transType :: Type -> Result
transType x = case x of
  Type id  -> failure x


transArgs :: Args -> Result
transArgs x = case x of
  Args type' id  -> failure x


transImportFile :: ImportFile -> Result
transImportFile x = case x of
  ImportFile address  -> failure x


transAddress :: Address -> Result
transAddress x = case x of
  Address id add  -> failure x


transAdd :: Add -> Result
transAdd x = case x of
  AddBar id add  -> failure x
  AddId id  -> failure x


transCondExp :: CondExp -> Result
transCondExp x = case x of
  CondExpId id condexp  -> failure x
  CondExpSymb symbols condexp  -> failure x
  CondExpInt n condexp  -> failure x
  CondExpDouble d condexp  -> failure x
  CondExpTimes condexp  -> failure x
  CondExpParent condexp1 condexp2  -> failure x
  CondExpDot condexp  -> failure x
  CondExpCorchete condexp1 condexp2  -> failure x
  CondExpComma condexp  -> failure x
  CondExpSlash condexp  -> failure x
  CondExpEq condexp  -> failure x
  CondExpBar condexp  -> failure x
  CondExpNil  -> failure x


transVarExp :: VarExp -> Result
transVarExp x = case x of
  VarExpId id varexp  -> failure x
  VarExpSymb symbols varexp  -> failure x
  VarExpInt n varexp  -> failure x
  VarExpDouble d varexp  -> failure x
  VarExpTimes varexp  -> failure x
  VarExpParent varexp1 varexp2  -> failure x
  VarExpDot varexp  -> failure x
  VarExpComma varexp  -> failure x
  VarExpCorchete varexp1 varexp2  -> failure x
  VarExpSlash varexp  -> failure x
  VarExpBar varexp  -> failure x
  VarExpNil  -> failure x


transJava :: Java -> Result
transJava x = case x of
  JavaId id java  -> failure x
  JavaSymb symbols java  -> failure x
  JavaInt n java  -> failure x
  JavaDouble d java  -> failure x
  JavaTimes java  -> failure x
  JavaDot java  -> failure x
  JavaBrack java1 java2  -> failure x
  JavaParent java1 java2  -> failure x
  JavaCorchete java1 java2  -> failure x
  JavaEq java  -> failure x
  JavaSemiColon java  -> failure x
  JavaBSlash java  -> failure x
  JavaComma java  -> failure x
  JavaSlash java  -> failure x
  JavaBar java  -> failure x
  JavaNil  -> failure x


transJML :: JML -> Result
transJML x = case x of
  JMLId id jml  -> failure x
  JMLMath symbols jml  -> failure x
  JMLInt n jml  -> failure x
  JMLDouble d jml  -> failure x
  JMLTimes jml  -> failure x
  JMLDot jml  -> failure x
  JMLBrack jml1 jml2  -> failure x
  JMLParent jml1 jml2  -> failure x
  JMLCorchete jml1 jml2  -> failure x
  JMLSemiColon jml  -> failure x
  JMLEq jml  -> failure x
  JMLComma jml  -> failure x
  JMLSlash jml  -> failure x
  JMLBar jml  -> failure x
  JMLBackS jml  -> failure x
  JMLOld jml1 jml2  -> failure x
  JMLRes jml  -> failure x
  JMLForallRT id1 id2 bodyf3 jml4  -> failure x
  JMLExistsRT id1 id2 bodyf3 jml4  -> failure x
  JMLNil  -> failure x


transBodyF :: BodyF -> Result
transBodyF x = case x of
  BodyF rangeterm  -> failure x


transRangeTerm :: RangeTerm -> Result
transRangeTerm x = case x of
  RangeTerm jml1 jml2  -> failure x
  OnlyRange jml  -> failure x



